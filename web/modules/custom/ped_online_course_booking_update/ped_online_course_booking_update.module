<?php

use Drupal\webform\Utility\WebformFormHelper;
use \Drupal\Core\Datetime\DrupalDateTime;

require_once 'ped_online_course_booking_update.variables.php';

/**
 * Implements hook_form_alter().
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function ped_online_course_booking_update_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == "webform_submission_ped_online_course_booking_update_add_form") {

    // Get custom field constants
    $constants = get_defined_constants(FALSE);

    //attach js
    $form['#attached']['library'][] = 'ped_online_course_booking_update/ped_online_course_booking_update';
    $form['#attached']['drupalSettings']['ped_online_course_booking_update']['start_date'] = '#edit-' . str_replace('_', '-', $constants['Start_Date']);
    $form['#attached']['drupalSettings']['ped_online_course_booking_update']['end_date'] = '#edit-' . str_replace('_', '-', $constants['End_Date']);
    $form['#attached']['drupalSettings']['ped_online_course_booking_update']['optional_addons'] = $constants['optional_addons'];
    $form['#attached']['drupalSettings']['ped_online_course_booking_update']['high_school_checkbox'] = $constants['high_school_checkbox'];

    //Get webform elements
    $elements = WebformFormHelper::flattenElements($form);

    //Activity ID
    $aid = \Drupal::request()->query->get('aid') ?? 0;
    if (empty($aid) || !is_numeric($aid)) {
      return;
    }

    if (empty($elements[$constants['Facilitating_Program']]['#default_value'])) {
      $elements[$constants['Facilitating_Program']]['#default_value'] = 'PublicEducation';
    }

    $elements[$constants['Resources_Content']]['#default_value'] = $elements[$constants['Support_Content']]['#default_value'] = 1;

    $bt = $elements['civicrm_1_activity_1_activity_activity_type_id']['#default_value'];

    if ($bt == $constants['adult_activity']) {
      $elements[$constants['online_courses']]['#options'] = array_intersect($elements[$constants['online_courses']]['#options'], [
        'Information for Partners & Supporters' => 'Information for Partners & Supporters',
        'Recognizing & Responding to Sexual Violence' => 'Recognizing & Responding to Sexual Violence',
        'Racism & Sexual Violence' => 'Racism & Sexual Violence',
        'Sexual Violence & the 2SLGBTQ+ Community' => 'Sexual Violence & the 2SLGBTQ+ Community',
      ]);

      //Hide youth optional addons
      $elements[$constants['optional_addons']]['#access'] = FALSE;
    }
    elseif ($bt == $constants['youth_activity']) {
      $elements[$constants['online_courses']]['#options'] = array_intersect($elements[$constants['online_courses']]['#options'], [
        'Ask First: Sexual Harassment ' => 'Ask First: Sexual Harassment',
        'Ask First: Sexual Assault & Consent ' => 'Ask First: Sexual Assault & Consent',
        'Ask First: Non-Consensual Photo Sharing ' => 'Ask First: Non-Consensual Photo Sharing',
        'Consent: Ask Me About It!' => 'Consent: Ask Me About It!',
      ]);

      //Grades and Ages remove Adults option
      unset($elements[$constants['grades_and_ages']]['#options']['Adults (ages 18+)']);
    }

  }
}
