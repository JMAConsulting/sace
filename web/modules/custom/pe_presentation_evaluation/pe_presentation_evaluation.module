<?php
use Drupal\webform\Utility\WebformFormHelper;
use Drupal\Core\Datetime\DrupalDateTime;

require_once 'pe_presentation_evaluation.variables.php';

/**
 * Implements hook_form_alter().
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function pe_presentation_evaluation_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'webform_submission_presentation_evaluation_summary__add_form') {
    //Get webform elements
    $elements = WebformFormHelper::flattenElements($form);

    $elements['civicrm_1_activity_1_cg2_custom_458']['#default_value'] = TRUE;
    $elements['civicrm_1_activity_1_cg2_custom_459']['#default_value'] = 1;

    $query = \Drupal::entityQuery('webform_submission')
      ->condition('webform_id', 'webform_submission_presentation_evaluation_summary__add_form');
  }

  if ($form_id == 'webform_submission_ped_sace_student_feedback_add_form') {

    // Get custom field constants
    $constants = get_defined_constants(FALSE);

    //Get webform form elements
    $elements = WebformFormHelper::flattenElements($form);
    \Drupal::service('civicrm')->initialize();
    // Get activity id from query var.
    $aid = \Drupal::request()->query->get('bid');
    if (empty($aid) || !is_numeric($aid)) {
      return;
    }
    // Get Booking Intake custom fields
    $result = \Civi\Api4\Activity::get(FALSE)
      ->addSelect('activity_type_id', 'activity_date_time', 'Booking_Information.Youth_or_Adult', 'Booking_Information.Online_Courses', 'activity_contact.contact_id', 'Booking_Information.Privilege_and_Oppression_Content', 'Booking_Information.Resources_Content', 'Booking_Information.Support_Content', 'Booking_Information.Presentation_topics', 'Booking_Information.Presentation_topics:label', 'Booking_Information.Safer_Spaces_Content', 'Booking_Information.Facilitating_Program', 'Booking_Information.Presentation_Method', 'Booking_Information.Presentation_custom', 'Booking_Information.Audience', 'Booking_Information.Facilitating_Program')
      ->addJoin('ActivityContact AS activity_contact', 'INNER')
      ->addGroupBy('id')
      ->addWhere('activity_contact.record_type_id', '=', 3)
      ->addWhere('id', '=', $aid)
      ->execute()
      ->first();

    if (empty($result)) {
      return;
    }

    // Disable date and presentation method fields
    $elements['date_of_presentation']['#disabled'] = TRUE;
    $elements['date_of_presentation']['#default_value'] = DrupalDateTime::createFromTimestamp(strtotime($result['activity_date_time']));
    $elements[$constants['PE_PRESENTATION_EVALUATION_PRESENTATION_METHOD']]['#disabled'] = TRUE;
    $elements[$constants['PE_PRESENTATION_EVALUATION_PRESENTATION_METHOD']]['#default_value'] = $result['Booking_Information.Presentation_Method'];
    $elements[$constants['TARGET_CONTACT']]['#value'] = $result['activity_contact.contact_id'];
    $elements[$constants['TARGET_CONTACT']]['#default_value'] = $result['activity_contact.contact_id'];
    $elements[$constants['TARGET_CONTACT']]['#disabled'] = TRUE;
    $elements[$constants['TARGET_CONTACT']]['#hidden'] = TRUE;

    if (in_array($result['activity_type_id'], [55, 196])) {
      unset($elements[$constants['DEMOGRAPHIC_INFO']]['#options']['Sex worker']);
    }

    //Get default selected value for Presentation Topic
    if (!empty($result['Booking_Information.Online_Courses'])) {
      $topics = \Civi\Api4\OptionValue::get(FALSE)
        ->addSelect('description')
        ->addWhere('value', 'LIKE', $result['Booking_Information.Online_Courses'])
        ->execute()->first()['description'];
    }
    else {
      $topics = $result['Booking_Information.Presentation_topics:label'];
    }

    if (is_array($topics)) {
      $topic = implode(', ', $topics);
      if (in_array('Custom / Unsure', $topics)) {
        $topic = str_replace('Custom / Unsure', $result['Booking_Information.Presentation_custom'], $topic);
      }
    }
    else {
      $topic = $topics;
    }
    $elements['presentation_topic_markup']['#markup'] = '<label for="presentation_topic_markup" class="form-item__label">Presentation Topic(s)</label><div>' . $topic . '</div>';

    //Hide other_presentation_topic
    $elements[$constants['Presentaion_Custom']]['#access'] = FALSE;

    $mapping = \Civi\Api4\OptionValue::get(FALSE)
      ->addSelect('value', 'label')
      ->addWhere('option_group_id:label', '=', 'PED Evaluation Question mapping')
      ->execute();
    $mapper = [];
    foreach ($mapping as $value) {
      $mapper[$value['label']] = $value['value'];
    }

    $result["Booking_Information.Presentation_topics"] = $result["Booking_Information.Presentation_topics"] ?: [];
    $result["Booking_Information.Audience"] = $result["Booking_Information.Audience"] ?: [];

    // for youth online course course feedback hide specific questiins
    if ($result['activity_type_id'] == 196) { 
      foreach ([6, 10, 13, 14, 15, 16, 17, 18, 19, 20, 24] as $Q) {
        $key = 'civicrm_1_activity_1_cg49_custom_' . $mapper[$Q];
        $elements[$key]['#access'] = FALSE;
      }
    }

    foreach ($mapper as $Q => $cfID) {
      $key = 'civicrm_1_activity_1_cg49_custom_' . $cfID;
      $elements[$key]['#title'] = str_replace('[the presentation topic]', $topic, $elements[$key]['#title']);
      $Q = (int) $Q;
      switch($Q) {
        case 4:
        case 5:
        case 7:
          //Show Q4 Q5 Q7 if Support content covered is Yes
          $elements[$key]['#access'] = ($result["Booking_Information.Support_Content"] == 1);
          break;

        case 6:
          $elements[$key]['#access'] = in_array($result['activity_type_id'], [59, 199]);
          break;         

        case 8:
        case 9:
          //Show Q8 Q9 if Content Covered: Resources is selected to Yes
          $elements[$key]['#access'] = ($result["Booking_Information.Resources_Content"] == 1);
          break;

        case 10:
          $elements[$key]['#access'] = ($result["Booking_Information.Youth_or_Adult"] == 'Adult');
          break;

        case 13:
        case 18:
          //Hide Q13 if Audience not in list
          $elements[$key]['#access'] = !empty(array_intersect($result["Booking_Information.Audience"], ["Professionals", "Service Providers", "Educators"]));
          break;

        case 14:
          $elements[$key]['#access'] = ($result["Booking_Information.Facilitating_Program"] == 'InstitutionalSupport');
          break;

        case 15:
          $elements[$key]['#access'] = (bool) strstr('Professionals', implode('', $result["Booking_Information.Audience"]));
          break;

        case 16:
          //Hide Q14 Q15 Q16 if Safer Spaces Content is NO
          $elements[$key]['#access'] = (bool) $result['Booking_Information.Safer_Spaces_Content'];
          break;

        case 17:
          //Hide Q17 if Facilitating Program is not Institutional Support
          $elements[$key]['#access'] = ($result['Booking_Information.Facilitating_Program'] == "InstitutionalSupport");
          break;

        case 19:
          //Hide Q19 if Presentation Topic is not Bystander Intervention
          $elements[$key]['#access'] = (bool) in_array('BystanderIntervention', $result["Booking_Information.Presentation_topics"]);
          break;

        case 20:
          //Show Q20 if Privilege and Oppression Covered set to Yes
          $elements[$key]['#access'] = (bool) $result['Booking_Information.Privilege_and_Oppression_Content'];
          break;

        case 21:
          //Hide Q21 if Presentation Method is not Online Course else hide Q22
          $elements[$key]['#access'] = !($result['Booking_Information.Presentation_Method'] == 'Online Course');
          break;

        case 22:
          //Show for all presentation and online course evaluations.
          $elements[$key]['#access'] = in_array($result['activity_type_id'], [55, 59, 196, 199]);
          break;

        case 24:
          $elements[$key]['#access'] = ($result['activity_type_id'] == 59);
          break;

        case 211:
          //Hide Q21 if Presentation Method is not Online Course else hide Q22
          $elements[$key]['#access'] = (bool) ($result['Booking_Information.Youth_or_Adult'] == 'Adult');
          break;

        default:
          break;

      }
    }

  }
}
