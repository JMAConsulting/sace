<?php
use Drupal\webform\Utility\WebformFormHelper;

require_once 'pe_presentation_evaluation.variables.php';

/**
 * Implements hook_form_alter().
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function pe_presentation_evaluation_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'webform_submission_presentation_evaluation_summary__add_form') {
    //Get webform elements
    $elements = WebformFormHelper::flattenElements($form);

    $elements['civicrm_1_activity_1_cg2_custom_458']['#default_value'] = TRUE;
    $elements['civicrm_1_activity_1_cg2_custom_459']['#default_value'] = 1;

    $query = \Drupal::entityQuery('webform_submission')
      ->condition('webform_id', 'webform_submission_presentation_evaluation_summary__add_form');
  }

  if ($form_id == 'webform_submission_ped_sace_student_feedback_add_form') {

    // Get custom field constants
    $constants = get_defined_constants(FALSE);

    //Get webform form elements
    $elements = WebformFormHelper::flattenElements($form);

    // Get activity id from query var.
    $aid = \Drupal::request()->query->get('bid');
    if (empty($aid) || !is_numeric($aid)) {
      return;
    }
    // Get Booking Intake custom fields
    $result = \Civi\Api4\Activity::get()
      ->addSelect('Booking_Information.Support_Content', 'Booking_Information.Presentation_topics', 'Booking_Information.Presentation_topics:label', 'Booking_Information.Safer_Spaces_Content', 'Booking_Information.Facilitating_Program', 'Booking_Information.Presentation_Method', 'Booking_Information.Presentation_custom', 'Booking_Information.Audience')
      ->addWhere('id', '=', $aid)
      ->execute()
      ->first();

    if (empty($result)) {
      return;
    }

    // Disable date and presentation method fields
    $elements[$constants['Activity_Date']]['#disabled'] = TRUE;
    $elements[$constants['Presentation_Method']]['#disabled'] = TRUE;
    $elements[$constants['Presentation_Method']]['#default_value'] = $result['Booking_Information.Presentation_Method'];

    //Get default selected value for Presentation Topic
    $topics = $result['Booking_Information.Presentation_topics:label'];
    if (is_array($topics)) {
      $topic = implode(', ', $topics);
      if (in_array('Custom/ Something Different', $topics)) {
        $topic = str_replace('Custom/ Something Different', $result['Booking_Information.Presentation_custom'], $topic);
      }
    }
    else {
      $topic = $topics;
    }
    $elements['presentation_topic_markup']['#markup'] = '<label for="presentation_topic_markup" class="form-item__label">Presentation Topic(s)</label><div>' . $topic . '</div>';

    //Hide other_presentation_topic
    $elements[$constants['Presentaion_Custom']]['#access'] = FALSE;

    // Remove leading Qxx from all questions
    foreach (array_keys($constants) as $q) {
      if (preg_match('/Q\d{1}/', $q)) {
        $elements[$constants[$q]]['#title'] = preg_replace("/Q[0-9]+\s/", '', $elements[$constants[$q]]['#title']);
        //insert presentation topic in question title
        $elements[$constants[$q]]['#title'] = str_replace('[the presentation topic]', $topic, $elements[$constants[$q]]['#title']);
      }
    }

    $result["Booking_Information.Presentation_topics"] = $result["Booking_Information.Presentation_topics"] ?: [];

    //Hide Q4 Q5 Q7 if Support content covered is NO
    if ($result["Booking_Information.Support_Content"] != 1) {
      $elements[$constants['Q4']]['#access'] = FALSE;
      $elements[$constants['Q5']]['#access'] = FALSE;
      $elements[$constants['Q7']]['#access'] = FALSE;
    }

    //Hide Q6 if Audience not in list
    $intersect = array_intersect($result["Booking_Information.Audience"], ["Professionals", "Service Providers", "Guardians", "Older Adults"]);
    if (empty($intersect)) {
      $elements[$constants['Q6']]['#access'] = FALSE;
    }

    //Hide Q8 Q9 if Presentation Topic not in list
    $intersect = array_intersect($result["Booking_Information.Presentation_topics"], ["SACEServices", "CommunityResources"]);
    if (empty($intersect)) {
      $elements[$constants['Q8']]['#access'] = FALSE;
      $elements[$constants['Q9']]['#access'] = FALSE;
    }

    //Hide Q13 if Audience not in list
    $intersect = array_intersect($result["Booking_Information.Audience"], ["Professionals", "Service Providers", "Educators"]);
    if (empty($intersect)) {
      $elements[$constants['Q13']]['#access'] = FALSE;
      $elements[$constants['Q18']]['#access'] = FALSE;
    }

    //Hide Q14 Q15 Q16 if Safer Spaces Content is NO
    if (!$result['Booking_Information.Safer_Spaces_Content']) {
      $elements[$constants['Q14']]['#access'] = FALSE;
      $elements[$constants['Q15']]['#access'] = FALSE;
      $elements[$constants['Q16']]['#access'] = FALSE;
    }

    //Hide Q17 if Facilitating Program is not Institutional Support
    if ($result['Booking_Information.Facilitating_Program'] != "InstitutionalSupport") {
      $elements[$constants['Q17']]['#access'] = FALSE;
    }

    //Hide Q19 if Presentation Topic is not Bystander Intervention
    if (!in_array('BystanderIntervention', $result["Booking_Information.Presentation_topics"])) {
      $elements[$constants['Q19']]['#access'] = FALSE;
    }

    //Hide Q20 if Presentation Topic is not Privilege and Oppression Covered
    if (!in_array('PrivilegeandOppression', $result["Booking_Information.Presentation_topics"])) {
      $elements[$constants['Q20']]['#access'] = FALSE;
    }

    //Hide Q21 if Presentation Method is not Online Course else hide Q22
    if ($result['Booking_Information.Presentation_Method'] == 'Online Course') {
      $elements[$constants['Q21']]['#access'] = FALSE;
    }
    else {
      $elements[$constants['Q22']]['#access'] = FALSE;
    }

    //Hide Q25 if Youth or Adult is not Adult
    if ($result['Booking_Information.Youth_or_Adult'] != 'Adult') {
      $elements[$constants['Q25']]['#access'] = FALSE;
    }
  }
}
