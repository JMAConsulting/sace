<?php
use Drupal\webform\Utility\WebformFormHelper;

/**
 * Implements hook_form_alter().
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function pe_presentation_evaluation_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'webform_submission_presentation_evaluation_summary__add_form') {
    $elements = WebformFormHelper::flattenElements($form);
    $elements['civicrm_1_activity_1_cg2_custom_458']['#default_value'] = TRUE;
    $elements['civicrm_1_activity_1_cg2_custom_459']['#default_value'] = 1;
    $query = \Drupal::entityQuery('webform_submission')
      ->condition('webform_id', 'webform_submission_presentation_evaluation_summary__add_form');

  }
  if ($form_id == 'webform_submission_ped_sace_student_feedback_add_form') {
    //Get webform form elements
    $elements = WebformFormHelper::flattenElements($form);

    // Disable date and presentation method fields
    $elements['civicrm_1_activity_1_activity_activity_date_time']['#disabled'] = TRUE;
    $elements['civicrm_1_activity_1_cg2_custom_88']['#disabled'] = TRUE;

    //Get default selected value for Presentation Topic
    $default_vals = $elements['civicrm_1_activity_1_cg2_custom_40']['#default_value'];
    $topics = [];
    foreach ($default_vals as $val) {
      if ($val == 'CustomSomethingDifferent' && !empty($elements['civicrm_1_activity_1_cg2_custom_340']['#default_value'])) {
        $topics[] = $elements['civicrm_1_activity_1_cg2_custom_340']['#default_value'];
      }
      else {
        $topics[] = $elements['civicrm_1_activity_1_cg2_custom_40']['#options'][$val];
      }
    }
    if (is_array($topics)) {
      $topic = implode(', ', $topics);
    }
    else {
      $topic = $topics;
    }
    $elements['civicrm_1_activity_1_cg2_custom_40']['#access'] = FALSE;
    $elements['presentation_topic_markup']['#markup'] = '<label for="presentation_topic_markup" class="form-item__label">Presentation Topic(s)</label><div>' . $topic . '</div>';
    $elements['civicrm_1_activity_1_cg2_custom_340']['#access'] = FALSE;

    
    //insert presentation topic in question title
    foreach (['q1', 'feedback', 'q3', 'feedback_q4', 'q5', 'feedback_q6', 'feedback_q15'] as $question) {
      $elements[$question]['#title'] = str_replace('[the presentation topic]', $topic, $elements[$question]['#title']);
    }

    //insert presentation method in question title
    foreach (['q19', 'q20'] as $question) {
      // $elements[$question]['#title'] = str_replace('[the presentation method]', $elements['civicrm_1_activity_1_cg2_custom_88']['#default_value'], $elements[$question]['#title']);
    }

    // Get activity id from query var.
    //get from form field TODO
    $aid = $elements['aid']['#default_value'] ?? 0;
    if (empty($aid) || !is_numeric($aid)) {
      return;
    }

    // Get Booking Intake custom fields
    $result = \Civi\Api4\Activity::get()
      ->addSelect('Booking_Information.Support_Content', 'Booking_Information.Presentation_topics', 'Booking_Information.Resources_Content', 'Booking_Information.Safer_Spaces_Content', 'Booking_Information.Facilitating_Program', 'Booking_Information.Presentation_Population_of_Focus', 'Booking_Information.Presentation_Method')
      ->addWhere('id', '=', $aid)
      ->execute()
      ->first();

    if (empty($result)) {
      return;
    }

    // Q3-4 based on support content toggled
    if ($result["Booking_Information.Support_Content"] != 1) {
      $elements['q3']['#access'] = FALSE;
      $elements['feedback_q4']['#access'] = FALSE;
    }

    // Q5 - q6 based on Community Resources or SACE Services toggled
    if ($result["Booking_Information.Resources_Content"] != 1) {
      $elements['q5']['#access'] = FALSE;
      $elements['feedback_q6']['#access'] = FALSE;
    }

    // Q9 - q11 toggle based on Safer Spaces Content toggled
    if ($result['Booking_Information.Safer_Spaces_Content'] != 1) {
      $elements['q9']['#access'] = FALSE;
      $elements['q10']['#access'] = FALSE;
      $elements['q11']['#access'] = FALSE;
    }

    //Q12 toggle based on facilitating program is Institutional Support
    if ($result['Booking_Information.Facilitating_Program'] != 'InstitutionalSupport') {
      $elements['q12']['#access'] = FALSE;
    }
      
    // Toggle based on Demographic information
    //Q13
    $q13_population_of_focus = ['adults', 'professionals', 'guardians', 'serviceproviders', 'educators'];
    if(empty(array_intersect(array_map( 'strtolower', $result['Booking_Information.Presentation_Population_of_Focus']), $q13_population_of_focus))) {
      $elements['q13']['#access'] = FALSE;
    } 
    
    // Q14
    if(empty(array_intersect(array_map( 'strtolower', $result['Booking_Information.Presentation_Population_of_Focus']), ['volunteers']))) {
      $elements['q14']['#access'] = FALSE;
    }

    //Q15    
    if(empty(array_intersect(array_map( 'strtolower', $result['Booking_Information.Presentation_Population_of_Focus']), ['serviceproviders']))) {
      $elements['feedback_q15']['#access'] = FALSE;
    }    
    //Q16 toggle show when presentation topic is Bystander Intervention    
    if(empty(array_intersect(array_map( 'strtolower', $result['Booking_Information.Presentation_Population_of_Focus']), ['professionals'])) || empty(array_intersect(array_map( 'strtolower', $result['Booking_Information.Presentation_topics']), ['bystanderintervention']))) {    
      $elements['q16']['#access'] = FALSE;
    }

    //Q17 toggle show when presentation topic is Privilege and Oppression
    if (empty(array_intersect(array_map( 'strtolower', $result['Booking_Information.Presentation_topics']), ['privilegeandoppression']))) {
      $elements['q17']['#access'] = FALSE;
    }

    //Q19-20 update presentation method    
    if (empty($result['Booking_Information.Presentation_Method'])) {
      return;
    }
    $form['elements']['feedback_q19']['#title'] = str_replace('[the presentation method]', $result['Booking_Information.Presentation_Method'], $form['elements']['feedback_q20']['#title']);
    $form['elements']['feedback_q20']['#title'] = str_replace('[the presentation method]', $result['Booking_Information.Presentation_Method'], $form['elements']['feedback_q20']['#title']);

    //  Get all questions
    $questions = [];
    foreach (array_keys($form['elements']) as $q) {
      if (preg_match('/q[0-9]+/i', $q) || preg_match('/feedback(_q[0-9]+)?/i', $q)) {
        $questions[] = $q;
      }
    }
    //  Remove leading Qxx from all questions
    foreach ($questions as $question) {
      $form['elements'][$question]['#title'] = preg_replace("/Q[0-9]+\s/", '', $form['elements'][$question]['#title']);
    }
  }
}
