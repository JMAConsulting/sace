<?php

use Drupal\webform\Utility\WebformFormHelper;
use Drupal\webform\Entity\Webform;
use Symfony\Component\Yaml\Yaml;

@require_once 'clin_booking.variables.php';

/**
 * Implements hook_form_alter().
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function clin_booking_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == "webform_submission_book_intake_add_form") {
    // Get custom field constants
    $constants = get_defined_constants(FALSE);

    $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());

    //Attach library
    $form['#attached']['library'][] = 'clin_booking/clin_booking';
    
    // Load the Webform entity.
    $webform = Webform::load('book_intake');

    // Set the confirmation URL to user's calendar
    $webform->setSetting('confirmation_url', '/clin-calendar/'.$user->get('uid')->value)->save();

    // Define the YAML configuration as an array.
    $buttons = [
      'actions' => [
        '#type' => 'webform_actions',
        '#title' => 'Submit button(s)',
        '#submit__label' => [
          'Submit',
          'Book Intake',
        ],
        '#submit__attributes' => [
          'class' => [
            'button',
            'button--secondary',
          ],
        ],
      ],
    ];

    \Drupal::logger('clin_booking')->notice('<pre>' . print_r($webform->getElementsDecoded(), true) . '</pre>');

    // Merge the new field configuration with the existing elements of the webform.
    $merged_elements = array_merge($webform->getElementsDecoded(), $buttons);

    // Convert array back to YAML string.
    $yaml_string = Yaml::dump($merged_elements);

    $webform->setElements($yaml_string)->save();

    // Get webform form elements
    $elements = WebformFormHelper::flattenElements($form);
    }
}
