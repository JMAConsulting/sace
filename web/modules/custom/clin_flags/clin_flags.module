
<?php

use Drupal\webform\Utility\WebformFormHelper;
use Drupal\webform\Entity\Webform;

/**
 * Implements hook_form_alter().
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function clin_flags_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == "webform_submission_add_flag_add_form") {

    //Attach library
    $form['#attached']['library'][] = 'clin_add_flag/clin_add_flag';

    // Get webform form elements
    $elements = WebformFormHelper::flattenElements($form);
   
    \Drupal::service('civicrm')->initialize();

    // Get aid or nid from url
    $fid = \Drupal::request()->query->get('fid') ?? 0;
    if (!empty($fid) && is_numeric($fid)) {
      \Drupal::service('civicrm')->initialize();
      $existingFlag = \Civi\Api4\Activity::get(FALSE)
        ->addWhere('id', '=', $fid)
        ->setLimit(1)
        ->execute()
        ->first();

        $flagType = \Civi\Api4\OptionValue::get(FALSE)
          ->addWhere('option_group_id', '=', 2)
          ->addWhere('value', '=', $existingFlag['activity_type_id'])
          ->execute()
          ->first();

        $elements['type_of_flag']['#default_value'] = $flagType['id'];
        $elements['flag_name']['#default_value'] = $existingFlag['subject'];
        $elements['description']['#default_value'] = $existingFlag['details'];
    }
    
  }
}

function clin_flags_preprocess_page_title(&$variables, $hook) {
  $current_path = \Drupal::service('path.current')->getPath();
  if ($current_path == '/webform/add_flag') {
    
    \Drupal::service('civicrm')->initialize();

    // Get aid or nid from url
    $fid = \Drupal::request()->query->get('fid') ?? 0;
    if (!empty($fid) && is_numeric($fid)) {
      $variables['title'] = [
        '#markup' => 'Edit Flag',
      ];
      return;
    }
  }
}
