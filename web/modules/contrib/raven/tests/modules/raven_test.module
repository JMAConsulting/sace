<?php

/**
 * @file
 * Raven test module.
 */

use Sentry\Event;
use Sentry\EventHint;
use Sentry\SentrySdk;

/**
 * Implements hook_page_attachments().
 *
 * @phpstan-ignore-next-line Hook implementations should not duplicate @param
 *   documentation.
 */
function raven_test_page_attachments(array &$attachments): void {
  $client = \Drupal::service('logger.raven')->getClient();
  $client->getOptions()->setBeforeSendCallback(function (Event $event, ?EventHint $hint) use (&$attachments): ?Event {
    if ($event->getLogger() === 'php') {
      $attachments['#attached']['http_header'][] = [
        'X-Uninterpolated',
        $event->getMessage(),
        FALSE,
      ];
    }
    if (!empty($event->getLogger()) && !empty($event->getMessageFormatted())) {
      $attachments['#attached']['http_header'][] = [
        $event->getLogger(),
        $event->getMessageFormatted(),
        FALSE,
      ];
      $frames = $event->getStacktrace()->getFrames();
      $last_frame = end($frames);
      $attachments['#attached']['http_header'][] = [
        'X-Stacktrace-File',
        basename($last_frame->getFile()),
        FALSE,
      ];
    }
    if (!empty($event->getExceptions())) {
      if (preg_match('/Allowed memory size of ([0-9]+) bytes exhausted/', $event->getExceptions()[0]->getValue(), $matches)) {
        echo $matches[1];
      }
      else {
        file_put_contents('public://x-handled.txt', (int) $event->getExceptions()[0]->getMechanism()->isHandled());
      }
    }
    return NULL;
  });
  \Drupal::logger('X-Logged')->error('Logged');
  \Drupal::logger('X-Not-Logged')->error('Not logged');
  \Drupal::logger('X-Logged')->error('Logged');
  $attachments['#cache']['contexts'][] = 'url.query_args';
  if ($memory_limit = \Drupal::request()->query->get('memory_limit')) {
    ini_set('memory_limit', $memory_limit);
    // @phpstan-ignore-next-line Yes, while loop condition is always true :)
    while (TRUE) {
      $attachments[] = 1;
    }
  }
  if (\Drupal::request()->query->get('throw')) {
    throw new \Exception('doh!');
  }
  if (\Drupal::request()->query->get('fatal')) {
    // phpcs:ignore
    define('SIMPLETEST_COLLECT_ERRORS', FALSE);
    // @phpstan-ignore-next-line Break things intentionally.
    new \NoSuchClass();
  }
  if (\Drupal::request()->query->get('error')) {
    // phpcs:ignore
    define('SIMPLETEST_COLLECT_ERRORS', FALSE);
    trigger_error('o_O', E_USER_ERROR);
  }
  $client->getOptions()->setBeforeSendTransactionCallback(function (Event $event, ?EventHint $hint) use (&$attachments): ?Event {
    $count = 0;
    foreach ($event->getStacktrace()->getFrames() as $frame) {
      $count += count($frame->getVars());
    }
    $attachments['#attached']['http_header'][] = [
      'X-Sentry-Transaction-Frame-Vars',
      $count,
      FALSE,
    ];
    return NULL;
  });
  if (\Drupal::request()->query->get('send_transaction')) {
    SentrySdk::getCurrentHub()->getTransaction()->finish();
  }
}

/**
 * Implements hook_raven_filter_alter().
 *
 * @phpstan-ignore-next-line Hook implementations should not duplicate @param
 *   documentation.
 */
function raven_test_raven_filter_alter(&$filter): void {
  if ($filter['context']['channel'] === 'X-Not-Logged') {
    $filter['process'] = FALSE;
  }
}
